package com.sybinal.shop.service.excel;

import java.io.InputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.sybinal.shop.common.Calculations;
import com.sybinal.shop.common.ExcelUtil;
import com.sybinal.shop.common.logisticsChange;
import com.sybinal.shop.controller.admin.FLogisticsController;
import com.sybinal.shop.mapper.FLogisticsMapper;
import com.sybinal.shop.mapper.GlogisticsMapper;
import com.sybinal.shop.mapper.UserMapper;
import com.sybinal.shop.mapper.freightPreviewMapper;
import com.sybinal.shop.mapper.hjBaseMapper;
import com.sybinal.shop.mapper.jpOrderMapper;
import com.sybinal.shop.mapper.logistictoidMapper;
import com.sybinal.shop.model.ExcelBean;
import com.sybinal.shop.model.FLogistics;
import com.sybinal.shop.model.Glogistics;
import com.sybinal.shop.model.freightPreview;
import com.sybinal.shop.model.hjBase;
import com.sybinal.shop.model.jpOrder;

@Service
public class ExcelServiceImpl implements ExcelService{
	
	@Autowired
	FLogisticsMapper fLogisticsMapper;
	
	@Autowired
	GlogisticsMapper glogisticsMapper;
	
	@Autowired
	hjBaseMapper hjbaseMapper;
	
	@Autowired
	jpOrderMapper jpMapper;
	
	@Autowired
	logistictoidMapper loMapper;

	@Autowired
	UserMapper userService;
	
	@Autowired
	freightPreviewMapper freightPrevieMapper;
    
	/*
	 * 导入
	 * (non-Javadoc)
	 * @see com.sybinal.shop.service.excel.ExcelService#importExcelInfo(java.io.InputStream, org.springframework.web.multipart.MultipartFile)
	 */
	@Override
    public int importExcelInfo(InputStream in, MultipartFile file) {
        try{
            List<List<Object>> listob = ExcelUtil.getBankListByExcel(in,file.getOriginalFilename());
            List<FLogistics> fLogistics = new ArrayList<FLogistics>();
            //遍历listob数据，把数据放到List中listob.size()
            for (int i = 0; i < listob.size(); i++) { 
                List<Object> ob = listob.get(i);
                FLogistics FLogisticsInfo =new FLogistics();
                /*
                 * id----------------------------------------------------------------------
                 * 1.获取订单*
                 * 2.进行比值判断是否为空*
                 * 3.进行s12的赋值*
                 * 4.前端添加运单进行物流调用*
                 *5
                 */
                FLogisticsInfo.setfIds(String.valueOf(ob.get(0)));
                
                /*
                                          * 旧单号
                 */
                FLogisticsInfo.setfOldOrder(String.valueOf(ob.get(1)));
                /*
				 * 旧采购
				*/
				FLogisticsInfo.setfOldPurchase(String.valueOf(ob.get(2)));
                /*
				* ClientOrderCode
				*/
				FLogisticsInfo.setfClientOrderCode(String.valueOf(ob.get(3)));
                /*
				* 店铺
				*/
				FLogisticsInfo.setfStore(String.valueOf(ob.get(4)));
                /*
				* PayTime
				*/
				DateFormat format = new SimpleDateFormat("yyyy/MM/dd"); 
				//FLogisticsInfo.setfPayTime(format.parse(String.valueOf(ob.get(6))));
				if(String.valueOf(ob.get(6))!=""&&String.valueOf(ob.get(6))!=null) {
					FLogisticsInfo.setfPayTime(format.parse(String.valueOf(ob.get(6))));
				}
                /*
				* Currency
				*/
				FLogisticsInfo.setfCurrency(String.valueOf(ob.get(7)));
                /*
				* TotalPrice
				*/
				FLogisticsInfo.setfTotalPrice(String.valueOf(ob.get(8)));
                /*
				* 中文简称
				*/
				FLogisticsInfo.setfChinaShort(String.valueOf(ob.get(18)));
                /*
				* FirstName
				*/
				FLogisticsInfo.setfFirstName(String.valueOf(ob.get(23)));
                /*
				* LastName
				*/
				FLogisticsInfo.setfLastName(String.valueOf(ob.get(24)));
                /*
				* Country
				*/
				FLogisticsInfo.setfCountry(String.valueOf(ob.get(25)));
                /*
				* Province
				*/
				FLogisticsInfo.setfProvince(String.valueOf(ob.get(26)));
                /*
				* City
				*/
				FLogisticsInfo.setfCity(String.valueOf(ob.get(27)));
                /*
				* PostCode
				*/
				FLogisticsInfo.setfPostCode(String.valueOf(ob.get(28)));
                /*
				* Email
				*/
				FLogisticsInfo.setfEmail(String.valueOf(ob.get(29)));
                /*
				* Telephone
				*/
				FLogisticsInfo.setfTelephone(String.valueOf(ob.get(30)));
                /*
				* Address1
				*/
				FLogisticsInfo.setfAddress1(String.valueOf(ob.get(31)));
                /*
				* Address2
				*/
				FLogisticsInfo.setfAddress2(String.valueOf(ob.get(32)));
                /*
				* Address3
				*/
				FLogisticsInfo.setfAddress3(String.valueOf(ob.get(33)));
                /*
				* 物流
				*/
				FLogisticsInfo.setfLogistics(String.valueOf(ob.get(34)));
                /*
				* 渠道
				*/
				FLogisticsInfo.setfChannel(String.valueOf(ob.get(35)));
                /*
				* 运单号
				*/
				FLogisticsInfo.setfSheet(String.valueOf(ob.get(36)));
                /*
				* Fee
				*/
				FLogisticsInfo.setStandby1(String.valueOf(ob.get(9)));
                /*
				* Money
				*/
				FLogisticsInfo.setStandby2(String.valueOf(ob.get(12)));
                /*
				* Cost
				*/
				FLogisticsInfo.setStandby3(String.valueOf(ob.get(13)));
                /*
				* Profile
				*/
				FLogisticsInfo.setStandby4(String.valueOf(ob.get(14)));
                /*
				* 追踪号
				*/
				FLogisticsInfo.setStandby7(String.valueOf(ob.get(37)));
                /*
				* sku
				*/
				FLogisticsInfo.setStandby8(String.valueOf(ob.get(16)));
				/*
				 * 导入的用户username
				 */

				String username=userService.Justiactions(FLogisticsController.username()).getStandby1();
				FLogisticsInfo.setStandby9(username);
                /*
                                           * 存入list列表
                 */
                /*
                 * 判断该订单号是否存在
                 * 
                 */
                if(loMapper.selectFids(FLogisticsInfo.getfIds())!=null)
                 FLogisticsInfo.setStandby12(loMapper.selectFids(FLogisticsInfo.getfIds()).getLogisticmethod());
                
               fLogistics.add(FLogisticsInfo);
            }
            /*
                                 * 存入数据库
             */
           return fLogisticsMapper.insertAll(fLogistics);
        }catch (Exception e){
            e.printStackTrace();
        }
		return 0;
    }
	/*
	 * 导出
	 */
	@Override
    public XSSFWorkbook exportExcelInfo(String idList) {//String idList
        XSSFWorkbook xssfWorkbook=null;

        String username=userService.Justiactions(FLogisticsController.username()).getStandby1();
        try {
            //根据ID查找数据
           String[] list = idList.split(",");
           List<String> strings = Arrays.asList(list);
            List<Glogistics> fLogistics = new ArrayList<Glogistics>();
           //for(int i=0;i<list.length;i++){
            	List<Glogistics> fLogisticsInfoList = glogisticsMapper.selectByPrimaryKey(strings,username);//Integer.valueOf(list[i])
            	fLogisticsMapper.updateStatues(strings);
            	for(Glogistics s:fLogisticsInfoList) {
            		if(s.getStandby12()!=null){
            		s.setStandby12(logisticsChange.pds(s.getStandby12()));
                    fLogistics.add(s);
            		}
            	}
           //}
            List<ExcelBean> excel=new ArrayList<>();
            Map<Integer,List<ExcelBean>> map=new LinkedHashMap<>();
            //设置标题栏
            excel.add(new ExcelBean("ID","fids",0));
            excel.add(new ExcelBean("旧单号","foldorder",0));
            excel.add(new ExcelBean("旧采购","foldpurchase",0));
            excel.add(new ExcelBean("ClientOrderCode","fclientordercode",0));
            excel.add(new ExcelBean("店铺","fstore",0));
            excel.add(new ExcelBean("PayTime","fpaytime",0));
            excel.add(new ExcelBean("Currency","fcurrency",0));
            excel.add(new ExcelBean("TotalPrice","ftotalprice",0));
            excel.add(new ExcelBean("中文简称","fchinashort",0));
            excel.add(new ExcelBean("英文简称","fenglishshort",0));
            excel.add(new ExcelBean("FirstName","ffirstname",0));
            excel.add(new ExcelBean("LastName","flastname",0));
            excel.add(new ExcelBean("Country","fcountry",0));
            excel.add(new ExcelBean("Province","fprovince",0));
            excel.add(new ExcelBean("City","fcity",0));
            excel.add(new ExcelBean("PostCode","fpostcode",0));
            excel.add(new ExcelBean("Email","femail",0));
            excel.add(new ExcelBean("Telephone","ftelephone",0));
            excel.add(new ExcelBean("Address1","faddress1",0));
            excel.add(new ExcelBean("Address2","faddress2",0));
            excel.add(new ExcelBean("Address3","faddress3",0));
            excel.add(new ExcelBean("物流","flogistics",0));
            excel.add(new ExcelBean("渠道","fchannel",0));
            excel.add(new ExcelBean("运单号","fsheet",0));
            excel.add(new ExcelBean("物流状态","fstatue",0));
            excel.add(new ExcelBean("运费","ffreight",0));
            excel.add(new ExcelBean("海关","fcustoms",0));
            excel.add(new ExcelBean("重量G","fweight",0));
            excel.add(new ExcelBean("备注","fremark",0));
            excel.add(new ExcelBean("手续费Fee","standby1",0));
            excel.add(new ExcelBean("原价Money","standby2",0));
            excel.add(new ExcelBean("运费Cost","standby3",0));
            excel.add(new ExcelBean("利润Profile","standby4",0));
            excel.add(new ExcelBean("公司","standby5",0));
            excel.add(new ExcelBean("状态","standby6",0));
            excel.add(new ExcelBean("追踪号","standby7",0));
            excel.add(new ExcelBean("sku","standby8",0));
            excel.add(new ExcelBean("物流方式","standby12",0));
            excel.add(new ExcelBean("跟踪号","standby11",0));
            map.put(0, excel);
            Calendar cal=Calendar.getInstance();      
            int y=cal.get(Calendar.YEAR);      
            int m=cal.get(Calendar.MONTH);      
            int d=cal.get(Calendar.DATE);      
            int h=cal.get(Calendar.HOUR_OF_DAY);      
            int mi=cal.get(Calendar.MINUTE);      
            int s=cal.get(Calendar.SECOND);      
            String sheetName ="Foam_运单基本信息"+y+"年"+m+"月"+d+"日"+h+"时"+mi+"分"+s+"秒";
            xssfWorkbook = ExcelUtil.createExcelFile(Glogistics.class, fLogistics, map, sheetName);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return xssfWorkbook;
    }
	/*
	 * 导出集拼
	 */
	@Override
    public XSSFWorkbook exportExcelInfo2(String idList) {//String idList
        XSSFWorkbook xssfWorkbook=null;

        Date date=new Date();

        String username=userService.Justiactions(FLogisticsController.username()).getStandby1();
        SimpleDateFormat ft=new SimpleDateFormat("yyyy.MM.dd : hh:mm:ss a");
        try {
            //根据ID查找数据
           String[] list = idList.split(",");
           List<String> strings = Arrays.asList(list);
            List<Glogistics> fLogistics = new ArrayList<Glogistics>();
           //for(int i=0;i<list.length;i++){
            	List<Glogistics> fLogisticsInfoList = glogisticsMapper.selectByPrimaryKey(strings,username);//Integer.valueOf(list[i])
            	fLogisticsMapper.updateStatues(strings);
            	for(Glogistics s:fLogisticsInfoList) {
            		if(s.getStandby12()!=null){
            		s.setFcountry(logisticsChange.gj(s.getFcountry()));
            		s.setFoldorder(ft.format(date));
                    fLogistics.add(s);
            		}
            	}
          // }
            List<ExcelBean> excel=new ArrayList<>();
            Map<Integer,List<ExcelBean>> map=new LinkedHashMap<>();
            //设置标题栏
            excel.add(new ExcelBean("物流渠道","standby12",0));
            excel.add(new ExcelBean("客户订单号","standby15",0));
            excel.add(new ExcelBean("物流跟踪号","standby11",0));
            excel.add(new ExcelBean("收货国家","fcountry",0));
            excel.add(new ExcelBean("集拼单号","standby14",0));
            excel.add(new ExcelBean("重量G","standby16",0));
            excel.add(new ExcelBean("发运时间","foldorder",0));
            map.put(0, excel);
            Calendar cal=Calendar.getInstance();      
            int y=cal.get(Calendar.YEAR);      
            int m=cal.get(Calendar.MONTH);      
            int d=cal.get(Calendar.DATE);      
            int h=cal.get(Calendar.HOUR_OF_DAY);      
            int mi=cal.get(Calendar.MINUTE);      
            int s=cal.get(Calendar.SECOND);      
            String sheetName ="Foam_集拼基本信息"+y+"年"+m+"月"+d+"日"+h+"时"+mi+"分"+s+"秒";
            xssfWorkbook = ExcelUtil.createExcelFile(Glogistics.class, fLogistics, map, sheetName);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return xssfWorkbook;
    }
	/*
	 * 导出中国邮政订单
	 */
	@Override
	public XSSFWorkbook exportExcelInfo3(String idList) {//String idList
        XSSFWorkbook xssfWorkbook=null;

        DateFormat format1 = new SimpleDateFormat("yyyy-MM-dd"); 
        hjBase hjlist=new hjBase();
        SimpleDateFormat ft=new SimpleDateFormat("yyyy/MM/dd");

        String username=userService.Justiactions(FLogisticsController.username()).getStandby1();
        try {
            //根据ID查找数据
           String[] list = idList.split(",");
           List<String> strings = Arrays.asList(list);
            List<Glogistics> fLogistics = new ArrayList<Glogistics>();
           //for(int i=0;i<list.length;i++){
            	List<Glogistics> fLogisticsInfoList = glogisticsMapper.selectByPrimaryKey(strings,username);//Integer.valueOf(list[i])
            	
            	fLogisticsMapper.updateStatues(strings);
            	for(Glogistics s:fLogisticsInfoList) {
            		hjlist=hjbaseMapper.selectByPrimaryKeyse(s.getFids(),username);

            		if(hjlist!=null) {
            		if(s.getStandby12()!=null){
            		s.setStandby12(logisticsChange.pd2(s.getStandby12()));
	            		if(hjlist.getHjTotalprice() != "") {
	            		s.setFclientordercode(hjlist.getHjTotalprice());
	            		}
	            		if(hjlist.getHjInvoiceweight() !="") {
	            		s.setStandby9(hjlist.getHjInvoiceweight());
	            		}
            		s.setFsheet("");
	            		if(!hjlist.getHjStandy1().equals("") && !hjlist.getHjStandy1().equals(null)) {
	            		s.setUpdateTime(String.valueOf(ft.format(hjlist.getHjStandy1())));
	            		}
	            	fLogistics.add(s);
            		}
            		}
            	}
           //}
            List<ExcelBean> excel=new ArrayList<>();
            Map<Integer,List<ExcelBean>> map=new LinkedHashMap<>();
            //设置标题栏
            excel.add(new ExcelBean("订单号","fids",0));
            excel.add(new ExcelBean("发货日期","updateTime",0));
            excel.add(new ExcelBean("承运商","standby12",0));
            excel.add(new ExcelBean("运输方式","fsheet",0));
            excel.add(new ExcelBean("面单号","fsheet",0));
            excel.add(new ExcelBean("追踪号","standby11",0));
            excel.add(new ExcelBean("申报(美元)","fclientordercode",0));
            excel.add(new ExcelBean("称重(克)","standby9",0));
            excel.add(new ExcelBean("运费(人民币)","fsheet",0));
            map.put(0, excel);
            Calendar cal=Calendar.getInstance();      
            int y=cal.get(Calendar.YEAR);      
            int m=cal.get(Calendar.MONTH);      
            int d=cal.get(Calendar.DATE);      
            int h=cal.get(Calendar.HOUR_OF_DAY);      
            int mi=cal.get(Calendar.MINUTE);      
            int s=cal.get(Calendar.SECOND);      
            String sheetName ="Foam_"+y+"年"+m+"月"+d+"日"+h+"时"+mi+"分"+s+"秒";
            xssfWorkbook = ExcelUtil.createExcelFile(Glogistics.class, fLogistics, map, sheetName);
        } catch (Exception e) {
            e.printStackTrace(); 
        }
        return xssfWorkbook;
    }
	
	
    /*
     * 根据集拼id导出
     * (non-Javadoc)
     * @see com.sybinal.shop.service.excel.ExcelService#exportExcelOutof(java.lang.String)
     */
	@Override
	public XSSFWorkbook exportExcelOutof(String idList) {
		// TODO Auto-generated method stub
		XSSFWorkbook xssfWorkbook=null;

		String username=userService.Justiactions(FLogisticsController.username()).getStandby1();
        Date date=new Date();
        SimpleDateFormat ft=new SimpleDateFormat("yyyy.MM.dd : hh:mm:ss a");
        try {
            //根据ID查找数据
           String[] list = idList.split(",");
           List<String> strings = Arrays.asList(list);
            List<hjBase> fLogistics = new ArrayList<hjBase>();
            List<hjBase> f2 = new ArrayList<hjBase>();
            List<jpOrder> jps=jpMapper.selectPrint(strings,username);
            for(jpOrder j:jps){
         	   String[] jplist= j.getJpResult().toString().split(",");
         	   List<String> string2s = Arrays.asList(jplist);
         	  f2= hjbaseMapper.seljps(string2s,username);
         	   for(hjBase s:f2){
         		   s.setHjCountrycode(logisticsChange.gj(s.getHjCountrycode()));
         		   s.setHjStandy4(j.getJpLaks());
         		   s.setHjStandy3(String.valueOf(ft.format(s.getHjStandy1())));
         		   fLogistics.add(s);
         	   }
         	   fLogisticsMapper.updateStatue2s(string2s,username);
            }

       	  	jpMapper.updateStatue(strings,username);
            List<ExcelBean> excel=new ArrayList<>();
            Map<Integer,List<ExcelBean>> map=new LinkedHashMap<>();
            //设置标题栏
            excel.add(new ExcelBean("物流渠道","hjShippingmethod",0));
            excel.add(new ExcelBean("客户订单号","hjReferenceno",0));
            excel.add(new ExcelBean("物流跟踪号","hjStandy7",0));
            excel.add(new ExcelBean("收货国家","hjCountrycode",0));
            excel.add(new ExcelBean("集拼单号","hjStandy4",0));
            excel.add(new ExcelBean("重量G","hjInvoiceweight",0));
            excel.add(new ExcelBean("发运时间","hjStandy3",0));
            excel.add(new ExcelBean("价格","hjInvoiceunitcharge",0));
            excel.add(new ExcelBean("系统单号","hjShipperhawbcode",0));
            map.put(0, excel);
            Calendar cal=Calendar.getInstance();      
            int y=cal.get(Calendar.YEAR);      
            int m=cal.get(Calendar.MONTH);      
            int d=cal.get(Calendar.DATE);
            int h=cal.get(Calendar.HOUR_OF_DAY);      
            int mi=cal.get(Calendar.MINUTE);      
            int s=cal.get(Calendar.SECOND);      
            String sheetName ="Foam_集拼基本信息"+y+"年"+m+"月"+d+"日"+h+"时"+mi+"分"+s+"秒";
            xssfWorkbook = ExcelUtil.createExcelFile(hjBase.class, fLogistics, map, sheetName);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return xssfWorkbook;
	}
	
	/**
	 * 运费预览
	 * (non-Javadoc)
	 * @see com.sybinal.shop.service.excel.ExcelService#importExcelInfo(java.io.InputStream, org.springframework.web.multipart.MultipartFile)
	 */
	@Override
    public int importExcelPreivew(InputStream in, MultipartFile file) {
        try{
            List<List<Object>> listob = ExcelUtil.getBankListByExcel(in,file.getOriginalFilename());
            List<freightPreview> preivew = new ArrayList<freightPreview>();
            Calculations cal=new Calculations();
            String usname=FLogisticsController.username();
            //遍历listob数据，把数据放到List中listob.size()
            for (int i = 0; i < listob.size(); i++) { 
                List<Object> ob = listob.get(i);
                freightPreview datas =new freightPreview();
                
                /*
				* 赋值
				*/
                if(ob.get(0).equals("")) {
                	break;
                }
				SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                datas.setDeliverTime(sdf2.parse(ob.get(0).toString()));
                datas.setOddNumber(String.valueOf(ob.get(1)));
                datas.setCustomerNumber(String.valueOf(ob.get(2)));
                datas.setTrackingSingleSign(String.valueOf(ob.get(3)));
                datas.setChannelCode(String.valueOf(ob.get(4)));
                datas.setDestinationCountry(String.valueOf(ob.get(5)));
                datas.setProductType(String.valueOf(ob.get(6)));
                datas.setActualFreight(String.valueOf(ob.get(7)));
                datas.setAmountReceivable(ob.get(8).toString());
                datas.setSpare1(usname); 
                hjBase base=hjbaseMapper.selres(datas.getTrackingSingleSign());
                if(base!=null) {
                if(base.getHjStandy14().equals("")) {
                	datas.setSpare2(Calculations.los(base.getHjInvoiceweight(), base.getHjCountrycode(), datas.getChannelCode()));// 预算运费
                }else {
                    datas.setSpare2(base.getHjStandy14());// 预算运费
                }
                datas.setSpare3(base.getHjInvoiceweight());// 申报重量
                datas.setSpare4(base.getHjInvoiceunitcharge());//申报金额
                preivew.add(datas);
                }
            }
            /*
                                 * 存入数据库
             */
           return freightPrevieMapper.insertAll(preivew);
        }catch (Exception e){
            e.printStackTrace();
        }
		return 0;
    }
	/**
	 * 导出差值
	 */
	@Override
	public XSSFWorkbook exportTables(String lists) {
		// TODO Auto-generated method stub
		XSSFWorkbook xssfWorkbook=null;
        SimpleDateFormat ft=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss a");
        try {
        	String[] split=lists.split(",");
        	List<String> strings = Arrays.asList(split);
            List<freightPreview> preview = new ArrayList<freightPreview>();
            List<freightPreview> result=freightPrevieMapper.selectAlllist(strings);
            for(freightPreview w:result) {
            	w.setSpare10(ft.format(w.getDeliverTime()));
            	preview.add(w);
            }
            List<ExcelBean> excel=new ArrayList<>();
            Map<Integer,List<ExcelBean>> map=new LinkedHashMap<>();
            //设置标题栏
            excel.add(new ExcelBean("时间","spare10",0));
            excel.add(new ExcelBean("跟踪号","trackingSingleSign",0));
            excel.add(new ExcelBean("系统单号","hjShipperHawbcode",0));
            excel.add(new ExcelBean("申报重量","hjInvoiceWeight",0));
            excel.add(new ExcelBean("实际重量","actualFreight",0));
            excel.add(new ExcelBean("差重","w",0));
            excel.add(new ExcelBean("预估运费","spare2",0));
            excel.add(new ExcelBean("实际运费","amountReceivable",0));
            excel.add(new ExcelBean("差价","p",0));
            map.put(0, excel); 
            Calendar cal=Calendar.getInstance();      
            int y=cal.get(Calendar.YEAR);      
            int m=cal.get(Calendar.MONTH);      
            int d=cal.get(Calendar.DATE);
            int h=cal.get(Calendar.HOUR_OF_DAY);      
            int mi=cal.get(Calendar.MINUTE);      
            int s=cal.get(Calendar.SECOND);      
            String sheetName ="price"+y+"年"+m+"月"+d+"日"+h+"时"+mi+"分"+s+"秒";
            xssfWorkbook = ExcelUtil.createExcelFile(freightPreview.class, preview, map, sheetName);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return xssfWorkbook;
	}
	/**导出扣费
	 * exportsPrices
	 */
	@Override
	public XSSFWorkbook exportsPrices(String lists) {
		// TODO Auto-generated method stub
				XSSFWorkbook xssfWorkbook=null;
		        SimpleDateFormat ft=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss a");
		        try {
		        	String[] split=lists.split(",");
		        	List<String> strings = Arrays.asList(split);
		            List<freightPreview> preview = new ArrayList<freightPreview>();
		            List<freightPreview> result=freightPrevieMapper.selectAlllist(strings);
		            for(freightPreview w:result) {
		            	w.setSpare10(ft.format(w.getDeliverTime()));
		            	preview.add(w);
		            }
		            List<ExcelBean> excel=new ArrayList<>();
		            Map<Integer,List<ExcelBean>> map=new LinkedHashMap<>();
		            //设置标题栏
		            excel.add(new ExcelBean("erp订单编号","hjShipperHawbcode",0));
		            excel.add(new ExcelBean("物流编号","channelCode",0));
		            excel.add(new ExcelBean("物流中文","z",0));
		            excel.add(new ExcelBean("发货时间","spare10",0));
		            excel.add(new ExcelBean("客户代码","customerNumber",0));
		            excel.add(new ExcelBean("预估扣费","spare2",0));
		            excel.add(new ExcelBean("环金扣费","amountReceivable",0));
		            map.put(0, excel); 
		            Calendar cal=Calendar.getInstance();      
		            int y=cal.get(Calendar.YEAR);      
		            int m=cal.get(Calendar.MONTH);      
		            int d=cal.get(Calendar.DATE);
		            int h=cal.get(Calendar.HOUR_OF_DAY);      
		            int mi=cal.get(Calendar.MINUTE);      
		            int s=cal.get(Calendar.SECOND);      
		            String sheetName ="price"+y+"年"+m+"月"+d+"日"+h+"时"+mi+"分"+s+"秒";
		            xssfWorkbook = ExcelUtil.createExcelFile(freightPreview.class, preview, map, sheetName);
		        } catch (Exception e) {
		            e.printStackTrace();
		        }
		        return xssfWorkbook;
	}
	/**
	 * 导出预估运费
	 */
	@Override
	public XSSFWorkbook Estimate(String lists) {
		// TODO Auto-generated method stub
		XSSFWorkbook xssfWorkbook=null;
        SimpleDateFormat ft=new SimpleDateFormat("yyyy-MM-dd hh:mm:ss a");
        try {
        	String[] split=lists.split(",");
        	List<String> strings = Arrays.asList(split);
            List<FLogistics> preview = new ArrayList<FLogistics>();
            List<FLogistics> result=fLogisticsMapper.selectListid(strings);
            for(FLogistics w:result) {
            	w.setT(w.getUpdateTime());
            	w.setFfids(w.getfIds());
            	w.setFfCountry(w.getfCountry());
            	System.out.println(w);
            	if(w.getStandby16()!=null && w.getStandby16()!="") {
            		w.setP(Calculations.los(w.getStandby16(), w.getfCountry(), w.getStandby12()));
            	}
            	preview.add(w);
            }
            List<ExcelBean> excel=new ArrayList<>(); 
            Map<Integer,List<ExcelBean>> map=new LinkedHashMap<>();
            //设置标题栏   
            excel.add(new ExcelBean("erp订单编号","ffids",0));
            excel.add(new ExcelBean("物流简写","standby12",0));
            excel.add(new ExcelBean("国家","ffCountry",0));
            excel.add(new ExcelBean("物流中文","z",0));
            excel.add(new ExcelBean("时间","T",0));
            excel.add(new ExcelBean("跟踪号","standby11",0));
            excel.add(new ExcelBean("系统单号","standby15",0));
            excel.add(new ExcelBean("申报重量","standby16",0));
            excel.add(new ExcelBean("预估运费","P",0));
            map.put(0, excel); 
            Calendar cal=Calendar.getInstance();      
            int y=cal.get(Calendar.YEAR);      
            int m=cal.get(Calendar.MONTH);      
            int d=cal.get(Calendar.DATE);
            int h=cal.get(Calendar.HOUR_OF_DAY);      
            int mi=cal.get(Calendar.MINUTE);      
            int s=cal.get(Calendar.SECOND);      
            String sheetName ="price"+y+"年"+m+"月"+d+"日"+h+"时"+mi+"分"+s+"秒";
            xssfWorkbook = ExcelUtil.createExcelFile(FLogistics.class, preview, map, sheetName);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return xssfWorkbook;
	}
}
