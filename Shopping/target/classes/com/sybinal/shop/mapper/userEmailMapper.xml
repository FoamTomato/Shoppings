<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sybinal.shop.mapper.userEmailMapper">
  <resultMap id="BaseResultMap" type="com.sybinal.shop.model.userEmail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="pwd_email" jdbcType="VARCHAR" property="pwdEmail" />
    <result column="types" jdbcType="VARCHAR" property="types" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="spare1" jdbcType="VARCHAR" property="spare1" />
    <result column="spare2" jdbcType="VARCHAR" property="spare2" />
    <result column="spare3" jdbcType="VARCHAR" property="spare3" />
    <result column="spare4" jdbcType="VARCHAR" property="spare4" />
    <result column="spare5" jdbcType="VARCHAR" property="spare5" />
    <result column="spare6" jdbcType="VARCHAR" property="spare6" />
    <result column="spare7" jdbcType="VARCHAR" property="spare7" />
    <result column="spare8" jdbcType="VARCHAR" property="spare8" />
    <result column="spare9" jdbcType="VARCHAR" property="spare9" />
    <result column="spare10" jdbcType="VARCHAR" property="spare10" />
    <result column="port1" jdbcType="VARCHAR" property="port1" />
    <result column="port2" jdbcType="VARCHAR" property="port2" />
  </resultMap>
  <sql id="Base_Column_List">
    id, user_email, pwd_email, types, state, spare1, spare2, spare3, spare4, spare5, 
    spare6,spare7,spare8,spare9,spare10,port1,port2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_email
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!-- 查找客服邮箱selectAll -->
  <select id="selectAll"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_email where state != "2" 
    <if test="text != ''">
       and ( user_email like concat('%','${text}','%')
    </if>
    <if test="text != ''">
       or spare1 like concat('%','${text}','%')
    </if>
    <if test="text != ''">
       or spare4 like concat('%','${text}','%')
    </if>
    <if test="text != ''">
       or spare5 like concat('%','${text}','%'))
    </if>
  </select>
  <!-- 根据id查找客户邮箱selectAllUser -->
  <select id="selectAllUser"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_email where id in
    <foreach collection="ids" item="ide" separator="," open="(" close=")">
    	#{ide}
    </foreach>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_email
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sybinal.shop.model.userEmail">
    insert into user_email (id, user_email, pwd_email, 
      types, state, spare1, 
      spare2, spare3, spare4, 
      spare5, spare6)
    values (#{id,jdbcType=INTEGER}, #{userEmail,jdbcType=VARCHAR}, #{pwdEmail,jdbcType=VARCHAR}, 
      #{types,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, #{spare1,jdbcType=VARCHAR}, 
      #{spare2,jdbcType=VARCHAR}, #{spare3,jdbcType=VARCHAR}, #{spare4,jdbcType=VARCHAR}, 
      #{spare5,jdbcType=VARCHAR}, #{spare6,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sybinal.shop.model.userEmail">
    insert into user_email
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="pwdEmail != null">
        pwd_email,
      </if>
      <if test="types != null">
        types,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="spare1 != null">
        spare1,
      </if>
      <if test="spare2 != null">
        spare2,
      </if>
      <if test="spare3 != null">
        spare3,
      </if>
      <if test="spare4 != null">
        spare4,
      </if>
      <if test="spare5 != null">
        spare5,
      </if>
      <if test="spare6 != null">
        spare6,
      </if>
      <if test="spare7 != null">
        spare7,
      </if>
      <if test="spare8 != null">
        spare8,
      </if>
      <if test="spare9 != null">
        spare9,
      </if>
      <if test="spare10 != null">
        spare10,
      </if>
      <if test="port1 != null">
        port1,
      </if>
      <if test="port2 != null">
        port2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="pwdEmail != null">
        #{pwdEmail,jdbcType=VARCHAR},
      </if>
      <if test="types != null">
        #{types,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="spare1 != null">
        #{spare1,jdbcType=VARCHAR},
      </if>
      <if test="spare2 != null">
        #{spare2,jdbcType=VARCHAR},
      </if>
      <if test="spare3 != null">
        #{spare3,jdbcType=VARCHAR},
      </if>
      <if test="spare4 != null">
        #{spare4,jdbcType=VARCHAR},
      </if>
      <if test="spare5 != null">
        #{spare5,jdbcType=VARCHAR},
      </if>
      <if test="spare6 != null">
        #{spare6,jdbcType=VARCHAR},
      </if>
      <if test="spare7 != null">
        #{spare7,jdbcType=VARCHAR},
      </if>
      <if test="spare8 != null">
        #{spare8,jdbcType=VARCHAR},
      </if>
      <if test="spare9 != null">
        #{spare9,jdbcType=VARCHAR},
      </if>
      <if test="spare10 != null">
        #{spare10,jdbcType=VARCHAR},
      </if>
      <if test="port1 != null">
        #{port1,jdbcType=VARCHAR},
      </if>
      <if test="port2 != null">
        #{port2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sybinal.shop.model.userEmail">
    update user_email
    <set>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="pwdEmail != null">
        pwd_email = #{pwdEmail,jdbcType=VARCHAR},
      </if>
      <if test="types != null">
        types = #{types,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR}, 
      </if>
      <if test="spare1 != null">
        spare1 = #{spare1,jdbcType=VARCHAR},
      </if>
      <if test="spare2 != null">
        spare2 = #{spare2,jdbcType=VARCHAR},
      </if>
      <if test="spare3 != null">
        spare3 = #{spare3,jdbcType=VARCHAR},
      </if>
      <if test="spare4 != null">
        spare4 = #{spare4,jdbcType=VARCHAR},
      </if>
      <if test="spare5 != null">
        spare5 = #{spare5,jdbcType=VARCHAR},
      </if>
      <if test="spare6 != null">
        spare6 = #{spare6,jdbcType=VARCHAR},
      </if>
      <if test="spare7 != null">
        spare7 = #{spare7,jdbcType=VARCHAR},
      </if>
      <if test="spare8 != null">
        spare8 = #{spare8,jdbcType=VARCHAR},
      </if>
      <if test="spare9 != null">
        spare9 = #{spare9,jdbcType=VARCHAR},
      </if>
      <if test="spare10 != null">
        spare10 = #{spare10,jdbcType=VARCHAR},
      </if>
      <if test="port1 != null">
        port1 = #{port1,jdbcType=VARCHAR},
      </if>
      <if test="port2 != null">
        port2 = #{port2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sybinal.shop.model.userEmail">
    update user_email
    set user_email = #{userEmail,jdbcType=VARCHAR},
      pwd_email = #{pwdEmail,jdbcType=VARCHAR},
      types = #{types,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      spare1 = #{spare1,jdbcType=VARCHAR},
      spare2 = #{spare2,jdbcType=VARCHAR},
      spare3 = #{spare3,jdbcType=VARCHAR},
      spare4 = #{spare4,jdbcType=VARCHAR},
      spare5 = #{spare5,jdbcType=VARCHAR},
      spare6 = #{spare6,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>