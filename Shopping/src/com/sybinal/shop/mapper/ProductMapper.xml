<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sybinal.shop.mapper.ProductMapper">
  <resultMap id="BaseResultMap" type="com.sybinal.shop.model.Product">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="general_explain" jdbcType="VARCHAR" property="generalExplain" />
    <result column="discount" jdbcType="INTEGER" property="discount" />
    <result column="shop_price" jdbcType="INTEGER" property="shopPrice" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="external_id" jdbcType="VARCHAR" property="externalId" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="hot" jdbcType="INTEGER" property="hot" />
    <result column="product_status" jdbcType="INTEGER" property="productStatus" />
    <result column="inventory_flag" jdbcType="INTEGER" property="inventoryFlag" />
    <result column="default_img" jdbcType="VARCHAR" property="defaultImg" />
    <!--<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="p_update_time" jdbcType="VARCHAR" property="pUpdateTime" />
    	<result column="p_update_user_id" jdbcType="INTEGER" property="pUpdateUserId" />
    	<result column="p_create_time" jdbcType="VARCHAR" property="pCreateTime" />
    	<result column="p_create_user_id" jdbcType="INTEGER" property="pCreateUserId" />
    	<result column="p_origin_area" jdbcType="VARCHAR" property="pOriginArea" />
    	<result column="p_english_short" jdbcType="VARCHAR" property="pEnglishShort" />
    	<result column="p_china_short" jdbcType="VARCHAR" property="pChinaShort" />
    	<result column="p_en" jdbcType="text" property="pEn" />
    	<result column="p_fr" jdbcType="text" property="pFr" />
    	 <result column="p_de" jdbcType="text" property="pDe" />
    	<result column="p_it" jdbcType="text" property="pIt" />
    	<result column="p_es" jdbcType="text" property="pEs" />
    	<result column="p_ru" jdbcType="text" property="pRu" />
    	<result column="p_ja" jdbcType="text" property="pJa" />
    	<result column="p_zh" jdbcType="text" property="pZh" />
    	<result column="p_product_gross_weight" jdbcType="VARCHAR" property="pProductGrossWeight" />
    	<result column="p_product_size" jdbcType="VARCHAR" property="pProductSize" />
    	<result column="p_product_currency" jdbcType="VARCHAR" property="pProductCurrency" />
    	<result column="p_source_url" jdbcType="VARCHAR" property="pSourceUrl" />
    	<result column="p_sh" jdbcType="text" property="pSh" />
    	<result column="p_cp" jdbcType="text" property="pCp" />
    	<result column="p_fj" jdbcType="text" property="pFj" />
    	<result column="p_ts" jdbcType="text" property="pTs" />
    	<result column="p_fx" jdbcType="text" property="pFx" />
    	<result column="p_rq" jdbcType="text" property="pRq" />
    	<result column="p_ywy" jdbcType="text" property="pYwy" />-->
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sybinal.shop.model.Product">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    <result column="explains" jdbcType="LONGVARCHAR" property="explains" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    `p`.`id`,
	`p`.`name`,
	`p`.`category_id`,
	`p`.`general_explain`,
	`p`.`discount`,
	`p`.`shop_price`,
	`p`.`price`,
	`p`.`external_id`,
	`p`.`quantity`,
	`p`.`hot`,
	`p`.`product_status`,
	`p`.`inventory_flag`,
	`p`.`default_img`,
	`p`.`update_time`,
	`p`.`update_user_id`,
	`p`.`create_time`,
	`p`.`create_user_id`
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    `p`.`explains`
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.sybinal.shop.model.ProductExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from `product` AS `p`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.sybinal.shop.model.ProductExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `product` AS `p`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sybinal.shop.model.ProductExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sybinal.shop.model.Product">
    <selectKey resultType="java.lang.Integer" order="AFTER"
			keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
	</selectKey>
    insert into product (name, category_id, 
      general_explain, discount, shop_price, 
      price, external_id, quantity, 
      hot, product_status, inventory_flag, 
      default_img, update_time, update_user_id, 
      create_time, create_user_id, `explains`
      )
    values (#{name,jdbcType=VARCHAR}, #{categoryId,jdbcType=INTEGER}, 
      #{generalExplain,jdbcType=VARCHAR}, #{discount,jdbcType=INTEGER}, #{shopPrice,jdbcType=INTEGER}, 
      #{price,jdbcType=INTEGER}, #{externalId,jdbcType=VARCHAR}, #{quantity,jdbcType=INTEGER}, 
      #{hot,jdbcType=INTEGER}, #{productStatus,jdbcType=INTEGER}, #{inventoryFlag,jdbcType=INTEGER}, 
      #{defaultImg,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, #{explains,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sybinal.shop.model.Product">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="generalExplain != null">
        general_explain,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="shopPrice != null">
        shop_price,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="externalId != null">
        external_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="hot != null">
        hot,
      </if>
      <if test="productStatus != null">
        product_status,
      </if>
      <if test="inventoryFlag != null">
        inventory_flag,
      </if>
      <if test="defaultImg != null">
        default_img,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="explains != null">
        `explains`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="generalExplain != null">
        #{generalExplain,jdbcType=VARCHAR},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=INTEGER},
      </if>
      <if test="shopPrice != null">
        #{shopPrice,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="externalId != null">
        #{externalId,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="hot != null">
        #{hot,jdbcType=INTEGER},
      </if>
      <if test="productStatus != null">
        #{productStatus,jdbcType=INTEGER},
      </if>
      <if test="inventoryFlag != null">
        #{inventoryFlag,jdbcType=INTEGER},
      </if>
      <if test="defaultImg != null">
        #{defaultImg,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="explains != null">
        #{explains,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sybinal.shop.model.ProductExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    select count(1) from `product` AS `p`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    update product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.generalExplain != null">
        general_explain = #{record.generalExplain,jdbcType=VARCHAR},
      </if>
      <if test="record.discount != null">
        discount = #{record.discount,jdbcType=INTEGER},
      </if>
      <if test="record.shopPrice != null">
        shop_price = #{record.shopPrice,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.externalId != null">
        external_id = #{record.externalId,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null">
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.hot != null">
        hot = #{record.hot,jdbcType=INTEGER},
      </if>
      <if test="record.productStatus != null">
        product_status = #{record.productStatus,jdbcType=INTEGER},
      </if>
      <if test="record.inventoryFlag != null">
        inventory_flag = #{record.inventoryFlag,jdbcType=INTEGER},
      </if>
      <if test="record.defaultImg != null">
        default_img = #{record.defaultImg,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.explains != null">
        `explains` = #{record.explains,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    update product
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      general_explain = #{record.generalExplain,jdbcType=VARCHAR},
      discount = #{record.discount,jdbcType=INTEGER},
      shop_price = #{record.shopPrice,jdbcType=INTEGER},
      price = #{record.price,jdbcType=INTEGER},
      external_id = #{record.externalId,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=INTEGER},
      hot = #{record.hot,jdbcType=INTEGER},
      product_status = #{record.productStatus,jdbcType=INTEGER},
      inventory_flag = #{record.inventoryFlag,jdbcType=INTEGER},
      default_img = #{record.defaultImg,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      `explains` = #{record.explains,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    update product
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      general_explain = #{record.generalExplain,jdbcType=VARCHAR},
      discount = #{record.discount,jdbcType=INTEGER},
      shop_price = #{record.shopPrice,jdbcType=INTEGER},
      price = #{record.price,jdbcType=INTEGER},
      external_id = #{record.externalId,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=INTEGER},
      hot = #{record.hot,jdbcType=INTEGER},
      product_status = #{record.productStatus,jdbcType=INTEGER},
      inventory_flag = #{record.inventoryFlag,jdbcType=INTEGER},
      default_img = #{record.defaultImg,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sybinal.shop.model.Product">
    update product
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="generalExplain != null">
        general_explain = #{generalExplain,jdbcType=VARCHAR},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=INTEGER},
      </if>
      <if test="shopPrice != null">
        shop_price = #{shopPrice,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="externalId != null">
        external_id = #{externalId,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null">
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="hot != null">
        hot = #{hot,jdbcType=INTEGER},
      </if>
      <if test="productStatus != null">
        product_status = #{productStatus,jdbcType=INTEGER},
      </if>
      <if test="inventoryFlag != null">
        inventory_flag = #{inventoryFlag,jdbcType=INTEGER},
      </if>
      <if test="defaultImg != null">
        default_img = #{defaultImg,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="explains != null">
        `explains` = #{explains,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sybinal.shop.model.Product">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    update product
    set name = #{name,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      general_explain = #{generalExplain,jdbcType=VARCHAR},
      discount = #{discount,jdbcType=INTEGER},
      shop_price = #{shopPrice,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      external_id = #{externalId,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      hot = #{hot,jdbcType=INTEGER},
      product_status = #{productStatus,jdbcType=INTEGER},
      inventory_flag = #{inventoryFlag,jdbcType=INTEGER},
      default_img = #{defaultImg,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      `explains` = #{explains,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sybinal.shop.model.Product">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 24 21:14:56 CST 2016.
    -->
    update product
    set name = #{name,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER},
      general_explain = #{generalExplain,jdbcType=VARCHAR},
      discount = #{discount,jdbcType=INTEGER},
      shop_price = #{shopPrice,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      external_id = #{externalId,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      hot = #{hot,jdbcType=INTEGER},
      product_status = #{productStatus,jdbcType=INTEGER},
      inventory_flag = #{inventoryFlag,jdbcType=INTEGER},
      default_img = #{defaultImg,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
	<resultMap id="ProductRelationBaseResultMap" type="com.sybinal.shop.model.ProductRelation">
		<id column="p_id" jdbcType="INTEGER" property="id" />
		<result column="p_name" jdbcType="VARCHAR" property="name" />
		<result column="p_category_id" jdbcType="INTEGER" property="categoryId" />
		<result column="p_general_explain" jdbcType="VARCHAR" property="generalExplain" />
		<result column="p_discount" jdbcType="INTEGER" property="discount" />
		<result column="p_shop_price" jdbcType="INTEGER" property="shopPrice" />
		<result column="p_price" jdbcType="INTEGER" property="price" />
		<result column="p_external_id" jdbcType="VARCHAR" property="externalId" />
		<result column="p_quantity" jdbcType="INTEGER" property="quantity" />
		<result column="p_hot" jdbcType="INTEGER" property="hot" />
		<result column="p_product_status" jdbcType="INTEGER" property="productStatus" />
		<result column="p_inventory_flag" jdbcType="INTEGER" property="inventoryFlag" />
		<!-- <result column="p_explain" jdbcType="LONGVARCHAR" property="explain" /> -->
    	<result column="p_default_img" jdbcType="VARCHAR" property="defaultImg" />
    	<!--<result column="p_update_time" jdbcType="VARCHAR" property="pUpdateTime" />
    	<result column="p_update_user_id" jdbcType="INTEGER" property="pUpdateUserId" />
    	<result column="p_create_time" jdbcType="VARCHAR" property="pCreateTime" />
    	<result column="p_create_user_id" jdbcType="INTEGER" property="pCreateUserId" />
    	<result column="p_origin_area" jdbcType="VARCHAR" property="pOriginArea" />
    	<result column="p_english_short" jdbcType="VARCHAR" property="pEnglishShort" />
    	<result column="p_china_short" jdbcType="VARCHAR" property="pChinaShort" />
    	<result column="p_en" jdbcType="text" property="pEn" />
    	<result column="p_fr" jdbcType="text" property="pFr" />
    	 <result column="p_de" jdbcType="text" property="pDe" />
    	<result column="p_it" jdbcType="text" property="pIt" />
    	<result column="p_es" jdbcType="text" property="pEs" />
    	<result column="p_ru" jdbcType="text" property="pRu" />
    	<result column="p_ja" jdbcType="text" property="pJa" />
    	<result column="p_zh" jdbcType="text" property="pZh" />
    	<result column="p_product_gross_weight" jdbcType="VARCHAR" property="pProductGrossWeight" />
    	<result column="p_product_size" jdbcType="VARCHAR" property="pProductSize" />
    	<result column="p_product_currency" jdbcType="VARCHAR" property="pProductCurrency" />
    	<result column="p_source_url" jdbcType="VARCHAR" property="pSourceUrl" />
    	<result column="p_sh" jdbcType="text" property="pSh" />
    	<result column="p_cp" jdbcType="text" property="pCp" />
    	<result column="p_fj" jdbcType="text" property="pFj" />
    	<result column="p_ts" jdbcType="text" property="pTs" />
    	<result column="p_fx" jdbcType="text" property="pFx" />
    	<result column="p_rq" jdbcType="text" property="pRq" />
    	<result column="p_ywy" jdbcType="text" property="pYwy" />
		 -->
		<collection column="pi_id" ofType="com.sybinal.shop.model.ProductImage" property="productImageList">
		    <id column="pi_id" jdbcType="INTEGER" property="id" />
		    <result column="pi_product_id" jdbcType="INTEGER" property="productId" />
		    <result column="pi_url" jdbcType="VARCHAR" property="url" />
		    <result column="pi_explain" jdbcType="LONGVARCHAR" property="explain" />
		</collection>
	</resultMap>
	<select id="selectProductRelationByExample" parameterType="com.sybinal.shop.model.ProductExample" resultMap="ProductRelationBaseResultMap">
		SELECT
			p.`id` AS p_id ,
			p.`name` AS p_name ,
			p.`category_id` AS p_category_id ,
			p.`explains` AS p_explains ,
			p.`general_explain` AS p_general_explain ,
			p.`discount` AS p_discount ,
			p.`shop_price` AS p_shop_price,
			p.`price` AS p_price,
			p.`external_id` AS p_external_id,
			p.`quantity` AS p_quantity,
			p.`hot` AS p_hot,
			p.`product_status` AS p_product_status,
			p.`inventory_flag` AS p_inventory_flag,
			`p`.`default_img`		AS `p_default_img` ,
			`p`.`update_time`		AS 'p_update_time' ,
			`p`.`update_user_id`		AS `p_update_user_id` ,
			`p`.`create_time`		AS 'p_create_time' ,
			`p`.`update_user_id`		AS `p_update_user_id` ,
			`p`.`create_user_id`		AS `p_create_user_id` ,
			`p`.`origin_area`		AS `p_origin_area` ,
			`p`.`english_short`		AS `p_english_short` ,
			`p`.`china_short`		AS `p_china_short` ,
			`p`.`ens`		AS `p_en` ,
			`p`.`frs`		AS `p_fr` ,
			`p`.`des`		AS `p_de` ,
			`p`.`its`		AS `p_it` ,
			`p`.`ess`		AS `p_es` ,
			`p`.`rus`		AS `p_ru` ,
			`p`.`jas`		AS `p_ja` ,
			`p`.`zhs`		AS `p_zh` ,
			`p`.`product_gross_weight`		AS `p_product_gross_weight` ,
			`p`.`product_size`		AS `p_product_size` ,
			`p`.`product_currency`		AS `p_product_currency` ,
			`p`.`source_url`		AS `p_source_url` ,
			`p`.`back_up_copy1`		AS `p_sh` ,
			`p`.`back_up_copy2`		AS `p_cp` ,
			`p`.`back_up_copy3`		AS `p_fj` ,
			`p`.`back_up_copy4`		AS `p_ts` ,
			`p`.`back_up_copy5`		AS `p_fx` ,
			`p`.`back_up_copy6`		AS `p_rq` ,
			`p`.`back_up_copy7`		AS `p_ywy` ,	
			
			pi.`id` AS pi_id ,
			pi.`url` AS pi_url ,
			pi.`explain` AS pi_explain
		FROM
			product AS p
	
		LEFT JOIN product_image AS pi
			ON p.`id` = pi.`product_id`
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectCountByProductId" resultType="java.lang.Integer">
		SELECT
			COUNT(1)
		FROM
			`product`
		WHERE
			`id` = #{productId,jdbcType=INTEGER};
	</select>
	<resultMap id="ProductAndImgByExampleResultMap" type="com.sybinal.shop.model.ProductRelation">
		<id column="p_id" jdbcType="INTEGER" property="id" />
		<result column="p_name" jdbcType="VARCHAR" property="name" />
		<result column="p_category_id" jdbcType="INTEGER" property="categoryId" />
		<result column="p_general_explain" jdbcType="VARCHAR" property="generalExplain" />
		<result column="p_discount" jdbcType="INTEGER" property="discount" />
		<result column="p_shop_price" jdbcType="INTEGER" property="shopPrice" />
		<result column="p_price" jdbcType="INTEGER" property="price" />
		<result column="p_external_id" jdbcType="VARCHAR" property="externalId" />
		<result column="p_quantity" jdbcType="INTEGER" property="quantity" />
		<result column="p_hot" jdbcType="INTEGER" property="hot" />
		<result column="p_product_status" jdbcType="INTEGER" property="productStatus" />
		<result column="p_inventory_flag" jdbcType="INTEGER" property="inventoryFlag" />
    	<result column="p_default_img" jdbcType="VARCHAR" property="defaultImg" />
		<!-- <result column="p_explain" jdbcType="LONGVARCHAR" property="explain" /> -->
		<collection column="p_id" ofType="com.sybinal.shop.model.ProductImage" property="productImageList">
		    <id column="pi_id" jdbcType="INTEGER" property="id" />
		    <result column="pi_product_id" jdbcType="INTEGER" property="productId" />
		    <result column="pi_url" jdbcType="VARCHAR" property="url" />
		    <result column="pi_explain" jdbcType="LONGVARCHAR" property="explain" />
		</collection>
	</resultMap>
	<select id="selectProductAndImgByExample" parameterType="com.sybinal.shop.model.ProductExample" resultMap="ProductAndImgByExampleResultMap">
		SELECT
			`p`.`id`				AS `p_id` ,
			`p`.`name`				AS `p_name` ,
			`p`.`category_id`		AS `p_category_id` ,
			`p`.`explains`			AS `p_explains` ,
			`p`.`general_explain`	AS `p_general_explain` ,
			`p`.`discount`			AS `p_discount` ,
			`p`.`shop_price`		AS `p_shop_price` ,
			`p`.`price`				AS `p_price` ,
			`p`.`external_id`		AS `p_external_id` ,
			`p`.`quantity`			AS `p_quantity` ,
			`p`.`hot`				AS `p_hot` ,
			`p`.`product_status`	AS `p_product_status` ,
			`p`.`inventory_flag`	AS `p_inventory_flag` ,
			`p`.`default_img`		AS `p_default_img` ,
			`pi`.`id`				AS `pi_id` ,
			`pi`.`product_id`		AS `pi_product_id` ,
			`pi`.`url`				AS `pi_url` ,
			<!-- `pi`.`explain`			AS `pi_explain` -->
		FROM
			`product` AS `p`
		LEFT JOIN `product_image` AS `pi`
			ON `p`.`id` = `pi`.`product_id`
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selctProductIdByExample" resultType="java.lang.Integer">
		SELECT
			`p`.`id`				AS `p_id`
		FROM
			`product` AS `p`
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<update id="updateQuantityCalculate" parameterType="java.lang.Integer">
		UPDATE `product` AS `p`
			SET `quantity` =(
				SELECT
					sum(`s`.`quantity`)
				FROM
					`sku` AS `s`
				WHERE
					`s`.`product_id` = `p`.id
			)
		WHERE `p`.id = #{id,jdbcType=INTEGER}
	</update>
	<resultMap id="ProductResultMap" type="com.sybinal.shop.model.Product">
		<id column="p_id" jdbcType="INTEGER" property="id" />
		<result column="p_name" jdbcType="VARCHAR" property="name" />
		<result column="p_category_id" jdbcType="INTEGER" property="categoryId" />
		<result column="pc_category_name" jdbcType="VARCHAR" property="categoryName" />
		<result column="p_general_explain" jdbcType="VARCHAR" property="generalExplain" />
		<result column="p_discount" jdbcType="INTEGER" property="discount" />
		<result column="p_shop_price" jdbcType="INTEGER" property="shopPrice" />
		<result column="p_price" jdbcType="INTEGER" property="price" />
		<result column="p_external_id" jdbcType="VARCHAR" property="externalId" />
		<result column="p_quantity" jdbcType="INTEGER" property="quantity" />
		<result column="p_hot" jdbcType="INTEGER" property="hot" />
		<result column="p_product_status" jdbcType="INTEGER" property="productStatus" />
		<result column="p_inventory_flag" jdbcType="INTEGER" property="inventoryFlag" />
    	<result column="p_default_img" jdbcType="VARCHAR" property="defaultImg" />
		<result column="p_explains" jdbcType="LONGVARCHAR" property="explains" />
		<result column="p_update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="us_updateUserName" jdbcType="VARCHAR" property="updateUserName" />
	</resultMap>
	<select id="selectProductByCondition" parameterType="com.sybinal.shop.model.Product" resultMap="ProductResultMap">
		SELECT
			`p`.`id`				AS `p_id` ,
			`p`.`name`				AS `p_name` ,
			`p`.`category_id`		AS `p_category_id` ,
			`pc`.`name`	AS `pc_category_name`, 
			`p`.`explains`			AS `p_explains` ,
			`p`.`general_explain`	AS `p_general_explain` ,
			`p`.`discount`			AS `p_discount` ,
			`p`.`shop_price`		AS `p_shop_price` ,
			`p`.`price`				AS `p_price` ,
			`p`.`external_id`		AS `p_external_id` ,
			`p`.`quantity`			AS `p_quantity` ,
			`p`.`hot`				AS `p_hot` ,
			`p`.`product_status`	AS `p_product_status` ,
			`p`.`inventory_flag`	AS `p_inventory_flag` ,
			`p`.`default_img`		AS `p_default_img`,
			`p`.`update_time`		AS `p_update_time` ,
			`us`.`user_name`	AS `us_updateUserName`
		FROM
			`product` AS `p` left join `product_category` AS  `pc` ON  `p`.`category_id` = `pc`.`id` 
			 left join `user` AS  `us` ON  `p`.`update_user_id` = `us`.`id` 
			where 1=1

	<if test="hot != 2"> and `p`.hot = #{hot,jdbcType=INTEGER}</if>
    <if test="name != null and name!=''"> and `p`.name like concat('%',#{name},'%')</if>
    <if test="categoryId != 0"> and `p`.`category_id` = #{categoryId,jdbcType=INTEGER}</if>
    <if test="productStatus != 2"> and `p`.product_status = #{productStatus,jdbcType=INTEGER}</if>
    <if test="updateTimeFrom != null and updateTimeFrom!=''"> and date_format(`p`.update_time,'%Y-%m-%d')>= #{updateTimeFrom,jdbcType=VARCHAR}</if>
    <if test="updateTimeTo != null and updateTimeTo!=''"> and <![CDATA[date_format(`p`.update_time,'%Y-%m-%d')<= #{updateTimeTo,jdbcType=VARCHAR}]]></if>
    order by `p`.`update_time` DESC
  </select>
  <select id="selectCountByCondition" parameterType="com.sybinal.shop.model.Product" resultType="java.lang.Integer">
    select count(*) from `product` AS `p` left join `product_category` AS  `pc` ON  `p`.`category_id` = `pc`.`id` 
			 left join `user` AS  `us` ON  `p`.`update_user_id` = `us`.`id` 
			where 1=1 
	<if test="hot != 2"> and `p`.hot = #{hot,jdbcType=INTEGER}</if>
    <if test="name != null and name!=''"> and `p`.name like concat('%',#{name},'%')</if>
    <if test="categoryId != 0"> and `p`.`category_id` = #{categoryId,jdbcType=INTEGER}</if>
    <if test="productStatus != 2"> and `p`.product_status = #{productStatus,jdbcType=INTEGER}</if>
    <if test="updateTimeFrom != null and updateTimeFrom!=''"> and date_format(`p`.update_time,'%Y-%m-%d')>= #{updateTimeFrom,jdbcType=VARCHAR}</if>
    <if test="updateTimeTo != null and updateTimeTo!=''"> and <![CDATA[date_format(`p`.update_time,'%Y-%m-%d')<= #{updateTimeTo,jdbcType=VARCHAR}]]></if>
  </select>
  <update id="updateQuantityByExample" parameterType="map">
    update product `p` 
    <set>
      <if test="record.quantity != null">
        `p`.quantity = `p`.quantity - #{record.quantity,jdbcType=INTEGER} 
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  
</mapper>