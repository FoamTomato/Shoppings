package com.sybinal.shop.model;

import java.util.ArrayList;
import java.util.List;

public class SequenceExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	public SequenceExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andTypeCodeIsNull() {
			addCriterion("type_code is null");
			return (Criteria) this;
		}

		public Criteria andTypeCodeIsNotNull() {
			addCriterion("type_code is not null");
			return (Criteria) this;
		}

		public Criteria andTypeCodeEqualTo(String value) {
			addCriterion("type_code =", value, "typeCode");
			return (Criteria) this;
		}

		public Criteria andTypeCodeNotEqualTo(String value) {
			addCriterion("type_code <>", value, "typeCode");
			return (Criteria) this;
		}

		public Criteria andTypeCodeGreaterThan(String value) {
			addCriterion("type_code >", value, "typeCode");
			return (Criteria) this;
		}

		public Criteria andTypeCodeGreaterThanOrEqualTo(String value) {
			addCriterion("type_code >=", value, "typeCode");
			return (Criteria) this;
		}

		public Criteria andTypeCodeLessThan(String value) {
			addCriterion("type_code <", value, "typeCode");
			return (Criteria) this;
		}

		public Criteria andTypeCodeLessThanOrEqualTo(String value) {
			addCriterion("type_code <=", value, "typeCode");
			return (Criteria) this;
		}

		public Criteria andTypeCodeLike(String value) {
			addCriterion("type_code like", value, "typeCode");
			return (Criteria) this;
		}

		public Criteria andTypeCodeNotLike(String value) {
			addCriterion("type_code not like", value, "typeCode");
			return (Criteria) this;
		}

		public Criteria andTypeCodeIn(List<String> values) {
			addCriterion("type_code in", values, "typeCode");
			return (Criteria) this;
		}

		public Criteria andTypeCodeNotIn(List<String> values) {
			addCriterion("type_code not in", values, "typeCode");
			return (Criteria) this;
		}

		public Criteria andTypeCodeBetween(String value1, String value2) {
			addCriterion("type_code between", value1, value2, "typeCode");
			return (Criteria) this;
		}

		public Criteria andTypeCodeNotBetween(String value1, String value2) {
			addCriterion("type_code not between", value1, value2, "typeCode");
			return (Criteria) this;
		}

		public Criteria andCounterKeyIsNull() {
			addCriterion("counter_key is null");
			return (Criteria) this;
		}

		public Criteria andCounterKeyIsNotNull() {
			addCriterion("counter_key is not null");
			return (Criteria) this;
		}

		public Criteria andCounterKeyEqualTo(String value) {
			addCriterion("counter_key =", value, "counterKey");
			return (Criteria) this;
		}

		public Criteria andCounterKeyNotEqualTo(String value) {
			addCriterion("counter_key <>", value, "counterKey");
			return (Criteria) this;
		}

		public Criteria andCounterKeyGreaterThan(String value) {
			addCriterion("counter_key >", value, "counterKey");
			return (Criteria) this;
		}

		public Criteria andCounterKeyGreaterThanOrEqualTo(String value) {
			addCriterion("counter_key >=", value, "counterKey");
			return (Criteria) this;
		}

		public Criteria andCounterKeyLessThan(String value) {
			addCriterion("counter_key <", value, "counterKey");
			return (Criteria) this;
		}

		public Criteria andCounterKeyLessThanOrEqualTo(String value) {
			addCriterion("counter_key <=", value, "counterKey");
			return (Criteria) this;
		}

		public Criteria andCounterKeyLike(String value) {
			addCriterion("counter_key like", value, "counterKey");
			return (Criteria) this;
		}

		public Criteria andCounterKeyNotLike(String value) {
			addCriterion("counter_key not like", value, "counterKey");
			return (Criteria) this;
		}

		public Criteria andCounterKeyIn(List<String> values) {
			addCriterion("counter_key in", values, "counterKey");
			return (Criteria) this;
		}

		public Criteria andCounterKeyNotIn(List<String> values) {
			addCriterion("counter_key not in", values, "counterKey");
			return (Criteria) this;
		}

		public Criteria andCounterKeyBetween(String value1, String value2) {
			addCriterion("counter_key between", value1, value2, "counterKey");
			return (Criteria) this;
		}

		public Criteria andCounterKeyNotBetween(String value1, String value2) {
			addCriterion("counter_key not between", value1, value2,
					"counterKey");
			return (Criteria) this;
		}

		public Criteria andNoCounterIsNull() {
			addCriterion("no_counter is null");
			return (Criteria) this;
		}

		public Criteria andNoCounterIsNotNull() {
			addCriterion("no_counter is not null");
			return (Criteria) this;
		}

		public Criteria andNoCounterEqualTo(Integer value) {
			addCriterion("no_counter =", value, "noCounter");
			return (Criteria) this;
		}

		public Criteria andNoCounterNotEqualTo(Integer value) {
			addCriterion("no_counter <>", value, "noCounter");
			return (Criteria) this;
		}

		public Criteria andNoCounterGreaterThan(Integer value) {
			addCriterion("no_counter >", value, "noCounter");
			return (Criteria) this;
		}

		public Criteria andNoCounterGreaterThanOrEqualTo(Integer value) {
			addCriterion("no_counter >=", value, "noCounter");
			return (Criteria) this;
		}

		public Criteria andNoCounterLessThan(Integer value) {
			addCriterion("no_counter <", value, "noCounter");
			return (Criteria) this;
		}

		public Criteria andNoCounterLessThanOrEqualTo(Integer value) {
			addCriterion("no_counter <=", value, "noCounter");
			return (Criteria) this;
		}

		public Criteria andNoCounterIn(List<Integer> values) {
			addCriterion("no_counter in", values, "noCounter");
			return (Criteria) this;
		}

		public Criteria andNoCounterNotIn(List<Integer> values) {
			addCriterion("no_counter not in", values, "noCounter");
			return (Criteria) this;
		}

		public Criteria andNoCounterBetween(Integer value1, Integer value2) {
			addCriterion("no_counter between", value1, value2, "noCounter");
			return (Criteria) this;
		}

		public Criteria andNoCounterNotBetween(Integer value1, Integer value2) {
			addCriterion("no_counter not between", value1, value2, "noCounter");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table sequence
	 * @mbggenerated  Wed Oct 19 21:07:43 CST 2016
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table sequence
     *
     * @mbggenerated do_not_delete_during_merge Wed Oct 19 20:55:54 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}